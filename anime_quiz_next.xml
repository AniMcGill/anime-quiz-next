<?xml version="1.0" encoding="UTF-8"?>
<project name="anime_quiz_next" default="all">
  
  
  <property file="anime_quiz_next.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.controlsfx-8.0.5.classpath">
    <pathelement location="/lib/controlsfx-8.0.5.jar"/>
  </path>
  
  <path id="library.sqlite-jdbc4-3.8.2-snapshot.classpath">
    <pathelement location="/lib/sqlite-jdbc4-3.8.2-SNAPSHOT.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module Anime Quiz Next -->
  
  <dirname property="module.anime_quiz_next.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.anime_quiz_next" value="-encoding UTF-8 -source 8 ${compiler.args}"/>
  
  <property name="anime_quiz_next.output.dir" value="${module.anime_quiz_next.basedir}/out/production/Anime Quiz Next"/>
  <property name="anime_quiz_next.testoutput.dir" value="${module.anime_quiz_next.basedir}/out/test/Anime Quiz Next"/>
  
  <path id="anime_quiz_next.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="anime_quiz_next.module.production.classpath">
    <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
    <path refid="library.controlsfx-8.0.5.classpath"/>
  </path>
  
  <path id="anime_quiz_next.runtime.production.module.classpath">
    <pathelement location="${anime_quiz_next.output.dir}"/>
    <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
    <path refid="library.controlsfx-8.0.5.classpath"/>
  </path>
  
  <path id="anime_quiz_next.module.classpath">
    <pathelement location="${anime_quiz_next.output.dir}"/>
    <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
    <path refid="library.controlsfx-8.0.5.classpath"/>
  </path>
  
  <path id="anime_quiz_next.runtime.module.classpath">
    <pathelement location="${anime_quiz_next.testoutput.dir}"/>
    <pathelement location="${anime_quiz_next.output.dir}"/>
    <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
    <path refid="library.controlsfx-8.0.5.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.anime_quiz_next">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.anime_quiz_next">
    <patternset refid="excluded.from.module.anime_quiz_next"/>
  </patternset>
  
  <path id="anime_quiz_next.module.sourcepath">
    <dirset dir="${module.anime_quiz_next.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.anime_quiz_next" depends="compile.module.anime_quiz_next.production,compile.module.anime_quiz_next.tests" description="Compile module Anime Quiz Next"/>
  
  <target name="compile.module.anime_quiz_next.production" description="Compile module Anime Quiz Next; production classes">
    <mkdir dir="${anime_quiz_next.output.dir}"/>
    <javac destdir="${anime_quiz_next.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.anime_quiz_next}"/>
      <bootclasspath refid="anime_quiz_next.module.bootclasspath"/>
      <classpath refid="anime_quiz_next.module.production.classpath"/>
      <src refid="anime_quiz_next.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.anime_quiz_next"/>
    </javac>
    
    <copy todir="${anime_quiz_next.output.dir}">
      <fileset dir="${module.anime_quiz_next.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.anime_quiz_next.tests" depends="compile.module.anime_quiz_next.production" description="compile module Anime Quiz Next; test classes" unless="skip.tests"/>
  
  <target name="clean.module.anime_quiz_next" description="cleanup module">
    <delete dir="${anime_quiz_next.output.dir}"/>
    <delete dir="${anime_quiz_next.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.anime_quiz_next, clean.artifact.animequiznext" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.anime_quiz_next" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.animequiznext" value="${basedir}/out/artifacts/AnimeQuizNext"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="artifact.temp.output.AnimeQuizNext" value="${artifacts.temp.dir}/AnimeQuizNext.jar"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.animequiznext" description="clean AnimeQuizNext artifact output">
    <delete dir="${artifact.output.animequiznext}"/>
  </target>
  
  <target name="artifact.animequiznext" depends="init.artifacts, compile.module.anime_quiz_next" description="Build &#39;AnimeQuizNext&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.animequiznext}"/>
    <copy todir="${artifact.temp.output.AnimeQuizNext}">
      <fileset dir="${anime_quiz_next.output.dir}"/>
    </copy>
    <fx:fileset id="all_but_AnimeQuizNext" dir="${artifact.temp.output.AnimeQuizNext}" includes="**/*.jar">
      <exclude name="AnimeQuizNext.jar"/>
    </fx:fileset>
    <fx:fileset id="all_AnimeQuizNext" dir="${artifact.temp.output.AnimeQuizNext}" includes="**/*.jar"/>
    <fx:application id="AnimeQuizNext_id" name="AnimeQuizNext" mainClass="MainWindow.Main"/>
    <fx:jar destfile="${artifact.temp.output.AnimeQuizNext}\AnimeQuizNext.jar">
      <fx:application refid="AnimeQuizNext_id"/>
      <fileset dir="${artifact.temp.output.AnimeQuizNext}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_AnimeQuizNext"/>
      </fx:resources>
      <manifest/>
    </fx:jar>
    <fx:deploy width="1024" height="768" updatemode="background" outdir="${artifact.temp.output.AnimeQuizNext}\deploy" outfile="AnimeQuizNext">
      <fx:application refid="AnimeQuizNext_id"/>
      <fx:info title="Anime Quiz Next" vendor="Atelier Hoshino"/>
      <fx:resources>
        <fx:fileset refid="all_AnimeQuizNext"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.animequiznext}">
      <fileset dir="${artifact.temp.output.AnimeQuizNext}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.AnimeQuizNext}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.animequiznext" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>